{"version":3,"sources":["components/HomePage.js","components/NotFoundPage.js","components/CowPage.js","components/FiveCrowns/ScoreRow.js","components/FiveCrowns/ScoreBoard.js","components/FiveCrowns/FiveCrowns.js","index.js"],"names":["HomePage","console","log","react_default","a","createElement","NotFoundPage","Player","props","player","name","className","onClick","score","immortalScore","Game","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","players","data","window","localStorage","getItem","JSON","parse","setState","value","index","changingPlayer","Number","isInteger","Math","ceil","splice","setItem","stringify","event","target","alert","preventDefault","_this2","playersList","map","key","scoreChange","onSubmit","handleSubmit","type","onChange","handleChange","React","Component","ScoreRow","_ref","basePlayers","numberOfRounds","onRemove","_useState","useState","_useState2","slicedToArray","playerName","setPlayerName","_useState3","Array","from","length","_useState4","rounds","setRoundScore","_useState5","_useState6","total","setTotal","useEffect","prevRounds","newRounds","toConsumableArray","i","push","newTotal","reduce","round","align","e","inputs","_loop","roundNumber","newScore","parseInt","updatedRounds","handleRoundChange","numberOfRoundInputs","ScoreBoard","setPlayers","newPlayerName","setNewPlayerName","headers","roundHeaders","FiveCrowns_ScoreRow","playNameToRemove","confirm","concat","updatedPlayers","handleRemovePlayer","placeholder","colSpan","trim","FiveCrowns","setNumberOfRounds","htmlFor","handleNumberOfRoundsChange","options","FiveCrowns_ScoreBoard","ReactDOM","createRoot","document","getElementById","render","dist","basename","to","react_router_dist","path","element","components_HomePage","components_NotFoundPage","CowPage","components_FiveCrowns_FiveCrowns"],"mappings":"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","file":"static/js/main.968965df.chunk.js","sourcesContent":["import React from 'react';\n\nfunction HomePage() {\n    console.log('am i rendering')\n    return (\n        <div>\n            <h1>Welcome to the Home Page</h1>\n            {/* Add content for your home page */}\n        </div>\n    );\n}\n\nexport default HomePage;\n","import React from 'react';\nexport const NotFoundPage = () => {\n  return (\n    <div>\n      <h1>404 - Not Found!</h1>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client'\n\nfunction Player(props) {\n    // useEffect(() => {\n    //   console.log(props.player.name, 'showBanner', props.player.score)\n    // }, [props.player.score])\n\n    return (\n        <div>\n            <h4>{props.player.name} </h4>\n            <button className='decrement' onClick={() =>props.onClick(-1)}>-1</button>\n            <div className='score'>{props.player.score + props.player.immortalScore} Cows</div>\n            <button className='increment' onClick={() => props.onClick(1)}>+1</button>\n            <button className='increment' onClick={() => props.onClick('immortal')}>Immortal Cows ({props.player.immortalScore})</button>\n            <button className='graveyard' onClick={() => props.onClick('graveyard')}>Graveyard</button>\n        </div>\n    );\n}\n\nfunction AddPlayerForm() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n            <label> Add Player </label>\n            <input type=\"text\" id=\"name\"></input>\n            <input type=\"submit\"></input>\n        </form>\n    )\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: [{\n                name: \"Berkley\",\n                score: 0,\n                immortalScore: 0,\n            }, {\n                name: \"Shelby\",\n                score: 0,\n                immortalScore: 0,\n            }\n            ],\n        }\n    }\n\n    componentDidMount() {\n        const data = window.localStorage.getItem('PLAYERS');\n        if (JSON.parse(data) != null) {\n            this.setState({\n                players: JSON.parse(data)\n            })\n        }\n    }\n\n    scoreChange(value, index) {\n        const changingPlayer = this.state.players[index]\n        if (Number.isInteger(value)) {\n            changingPlayer.score = changingPlayer.score + value\n        } else if (value == 'immortal') {\n            changingPlayer.immortalScore += 1\n        } else if (value == 'graveyard') {\n            changingPlayer.score = Math.ceil(changingPlayer.score * 0.5)\n        }\n        this.state.players.splice(index, 1, changingPlayer)\n        this.setState({\n            players: this.state.players,\n        })\n\n        window.localStorage.setItem('PLAYERS', JSON.stringify(this.state.players));\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        const playersList = this.state.players.map((player, index) => {\n            return (\n                <li key={index}>\n                    <Player player={player} onClick={(value) => this.scoreChange(value, index)}/>\n                </li>\n            )\n        });\n\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label> Add Player </label>\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n                    <input type=\"submit\" value=\"submit\"></input>\n                </form>\n                <ul>\n                    {playersList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Game;\n","import React, {useState, useEffect} from 'react';\n\nexport const ScoreRow = ({basePlayers, numberOfRounds, onRemove}) => {\n    const [playerName, setPlayerName] = useState(basePlayers);\n    const [rounds, setRoundScore] = useState(() =>\n        Array.from({ length: numberOfRounds }, () => 0)\n    );\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        setRoundScore((prevRounds) => {\n            const newRounds = [...prevRounds];\n            if (newRounds.length < numberOfRounds) {\n                // Add additional rounds if numberOfRounds increased\n                for (let i = newRounds.length; i < numberOfRounds; i++) {\n                    newRounds.push(0);\n                }\n            } else if (newRounds.length > numberOfRounds) {\n                // Remove excess rounds if numberOfRounds decreased\n                newRounds.splice(numberOfRounds);\n            }\n            return newRounds;\n        });\n    }, [numberOfRounds]);\n\n    useEffect(() => {\n        const newTotal = rounds.reduce((total, round) => total + round, 0);\n        setTotal(newTotal)\n    }, [rounds]);\n\n    const handlePlayerNameChange = (e) => {\n        setPlayerName(e.target.value);\n    }\n    const handleRoundChange = (roundNumber, e) => {\n        const newScore = parseInt(e.target.value);\n        const updatedRounds = [...rounds];\n        updatedRounds[roundNumber - 1] = newScore;\n        setRoundScore(updatedRounds);\n\n    }\n    const numberOfRoundInputs = () => {\n        let inputs = [];\n        for (let i = 1; i <= numberOfRounds; i++) {\n            inputs.push(\n                <td key={i}>\n                    <input\n                        type=\"number\"\n                        value={rounds[i - 1]} // Subtract 1 because the array is 0-based\n                        onChange={(e) => handleRoundChange(i, e)}\n                    />\n                </td>\n            );\n        }\n        return inputs;\n    };\n\n\n    return (\n        <tr align=\"center\">\n            <td><input type=\"text\" value={playerName} onChange={handlePlayerNameChange}/></td>\n            <td>{total}</td>\n            {numberOfRoundInputs()}\n            <td>\n                <button onClick={onRemove}>Remove</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default ScoreRow;\n","import React, { useState } from 'react';\nimport ScoreRow from \"./ScoreRow\";\n\nexport const ScoreBoard = ({numberOfRounds}) => {\n    const [players, setPlayers] =useState( ['Player 1', 'Player 2'])\n    const [newPlayerName, setNewPlayerName] = useState('');\n\n    const handleAddPlayer = () => {\n        console.log(players)\n        if (newPlayerName.trim() !== '') {\n            setPlayers([...players, newPlayerName]);\n            setNewPlayerName('');\n        }\n    }\n\n    const handleRemovePlayer = (index) => {\n        const playNameToRemove = players[index];\n        const shouldRemove = window.confirm(`Are you sure you want to remove ${playNameToRemove}?`);\n        if (!shouldRemove) return;\n        const updatedPlayers = [...players];\n        updatedPlayers.splice(index, 1);\n        setPlayers(updatedPlayers);\n    }\n\n    const roundHeaders = () => {\n        let headers = [];\n        for (let i = 1; i <= numberOfRounds; i++) {\n            headers.push(<td key={i}>Round {i}</td>)\n        }\n        return headers;\n    }\n\n    return (\n        <div>\n            <h3>Score Board</h3>\n            <table>\n                <thead>\n                <tr>\n                    <td>Name</td>\n                    <td>Score</td>\n                    {roundHeaders()}\n                </tr>\n                </thead>\n                <tbody>\n                    {players.map((playerName, index) => (\n                        <ScoreRow\n                            key={index}\n                            basePlayers={playerName}\n                            numberOfRounds={numberOfRounds}\n                            onRemove={()=>handleRemovePlayer(index)}\n                        />\n                    ))}\n                    <tr>\n                        <td>\n                            <input\n                                type=\"text\"\n                                placeholder=\"New Player\"\n                                value={newPlayerName}\n                                onChange={(e) => setNewPlayerName(e.target.value)}\n                                />\n                        </td>\n                        <td colSpan=\"5\">\n                            <button onClick={handleAddPlayer}>Add Player</button>\n                        </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n    );\n}\n\nexport default ScoreBoard;\n","import React, {useState, useEffect} from 'react';\nimport ScoreBoard from \"./ScoreBoard\";\nexport const FiveCrowns = () => {\n    const [numberOfRounds, setNumberOfRounds] = useState(localStorage.getItem('numberOfRounds') || 1);\n\n    const handleNumberOfRoundsChange = (e) => {\n        setNumberOfRounds(parseInt(e.target.value));\n    }\n\n    useEffect(() => {\n        localStorage.setItem('numberOfRounds', numberOfRounds);\n    }, [numberOfRounds]);\n\n    // create a loop to create 13 option tags\n    const options = () => {\n        let options = [];\n        for (let i = 1; i <= 13; i++) {\n            options.push(<option key={i} value={i}>{i}</option>)\n        }\n        return options;\n    }\n\n    return (\n        <div>\n            <h1>Five Crowns</h1>\n            <div>\n                <h3>Settings</h3>\n                <div>\n                    <label htmlFor=\"rounds\">Number of Rounds</label>\n                    <select onChange={(e)=>handleNumberOfRoundsChange(e)}>\n                        {options()}\n                    </select>\n                </div>\n            </div>\n            <ScoreBoard numberOfRounds={numberOfRounds}/>\n        </div>\n    );\n}\n\nexport default FiveCrowns;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\n\nimport HomePage from './components/HomePage';\nimport NotFoundPage from './components/NotFoundPage';\nimport CowPage from './components/CowPage';\nimport FiveCrowns from './components/FiveCrowns/FiveCrowns';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <Router basename=\"/cow-game\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/NotFoundPage\">Not Found</Link>\n            </li>\n            <li>\n                <Link to=\"/CowPage\">Cow Page</Link>\n            </li>\n            <li>\n                <Link to=\"/FiveCrowns\">Five Crowns</Link>\n            </li>\n          </ul>\n        </nav>\n        <Routes>\n            <Route path=\"/\" element={<HomePage/>} />\n            <Route path=\"/NotFoundPage\" element={<NotFoundPage/>} />\n            <Route path=\"/CowPage\" element={<CowPage/>} />\n            <Route path=\"/FiveCrowns\" element={<FiveCrowns/>} />\n        </Routes>\n    </Router>\n);\n\n"],"sourceRoot":""}