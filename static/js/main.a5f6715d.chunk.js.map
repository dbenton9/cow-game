{"version":3,"sources":["components/HomePage.js","components/NotFoundPage.js","components/CowPage.js","components/FiveCrowns/ScoreRow.js","components/FiveCrowns/ScoreBoard.js","components/FiveCrowns/FiveCrowns.js","index.js"],"names":["HomePage","console","log","react_default","a","createElement","NotFoundPage","Player","props","player","name","className","onClick","score","immortalScore","Game","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","players","data","window","localStorage","getItem","JSON","parse","setState","value","index","changingPlayer","Number","isInteger","Math","ceil","splice","setItem","stringify","event","target","alert","preventDefault","_this2","playersList","map","key","scoreChange","onSubmit","handleSubmit","type","onChange","handleChange","React","Component","ScoreRow","_ref","basePlayers","onRemove","_useState","useState","_useState2","slicedToArray","playerName","setPlayerName","_useState3","_useState4","round1","setRound1Score","_useState5","_useState6","round2","setRound2Score","_useState7","_useState8","round3","setRound3Score","_useState9","_useState10","total","setTotal","useEffect","handleRoundChange","roundNumber","e","newScore","parseInt","align","ScoreBoard","setPlayers","newPlayerName","setNewPlayerName","FiveCrowns_ScoreRow","playNameToRemove","confirm","concat","updatedPlayers","toConsumableArray","handleRemovePlayer","placeholder","colSpan","trim","FiveCrowns","FiveCrowns_ScoreBoard","ReactDOM","createRoot","document","getElementById","render","dist","to","react_router_dist","path","element","components_HomePage","components_NotFoundPage","CowPage","components_FiveCrowns_FiveCrowns"],"mappings":"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","file":"static/js/main.a5f6715d.chunk.js","sourcesContent":["import React from 'react';\n\nfunction HomePage() {\n    console.log('am i rendering')\n    return (\n        <div>\n            <h1>Welcome to the Home Page</h1>\n            {/* Add content for your home page */}\n        </div>\n    );\n}\n\nexport default HomePage;\n","import React from 'react';\nexport const NotFoundPage = () => {\n  return (\n    <div>\n      <h1>404 - Not Found!</h1>\n    </div>\n  );\n}\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport ReactDOM from 'react-dom/client'\n\nfunction Player(props) {\n    // useEffect(() => {\n    //   console.log(props.player.name, 'showBanner', props.player.score)\n    // }, [props.player.score])\n\n    return (\n        <div>\n            <h4>{props.player.name} </h4>\n            <button className='decrement' onClick={() =>props.onClick(-1)}>-1</button>\n            <div className='score'>{props.player.score + props.player.immortalScore} Cows</div>\n            <button className='increment' onClick={() => props.onClick(1)}>+1</button>\n            <button className='increment' onClick={() => props.onClick('immortal')}>Immortal Cows ({props.player.immortalScore})</button>\n            <button className='graveyard' onClick={() => props.onClick('graveyard')}>Graveyard</button>\n        </div>\n    );\n}\n\nfunction AddPlayerForm() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n            <label> Add Player </label>\n            <input type=\"text\" id=\"name\"></input>\n            <input type=\"submit\"></input>\n        </form>\n    )\n}\n\nclass Game extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: [{\n                name: \"Berkley\",\n                score: 0,\n                immortalScore: 0,\n            }, {\n                name: \"Shelby\",\n                score: 0,\n                immortalScore: 0,\n            }\n            ],\n        }\n    }\n\n    componentDidMount() {\n        const data = window.localStorage.getItem('PLAYERS');\n        if (JSON.parse(data) != null) {\n            this.setState({\n                players: JSON.parse(data)\n            })\n        }\n    }\n\n    scoreChange(value, index) {\n        const changingPlayer = this.state.players[index]\n        if (Number.isInteger(value)) {\n            changingPlayer.score = changingPlayer.score + value\n        } else if (value == 'immortal') {\n            changingPlayer.immortalScore += 1\n        } else if (value == 'graveyard') {\n            changingPlayer.score = Math.ceil(changingPlayer.score * 0.5)\n        }\n        this.state.players.splice(index, 1, changingPlayer)\n        this.setState({\n            players: this.state.players,\n        })\n\n        window.localStorage.setItem('PLAYERS', JSON.stringify(this.state.players));\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n    }\n\n    handleSubmit(event) {\n        alert('A name was submitted: ' + this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        const playersList = this.state.players.map((player, index) => {\n            return (\n                <li key={index}>\n                    <Player player={player} onClick={(value) => this.scoreChange(value, index)}/>\n                </li>\n            )\n        });\n\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label> Add Player </label>\n                    <input type=\"text\" value={this.state.value} onChange={this.handleChange}></input>\n                    <input type=\"submit\" value=\"submit\"></input>\n                </form>\n                <ul>\n                    {playersList}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default Game;\n","import React, { useState, useEffect } from 'react';\n\nexport const ScoreRow = ({basePlayers, onRemove}) => {\n    const [playerName, setPlayerName] = useState(basePlayers);\n    const [round1, setRound1Score] = useState(0);\n    const [round2, setRound2Score] = useState(0);\n    const [round3, setRound3Score] = useState(0);\n    const [total, setTotal] = useState(0);\n\n    useEffect(() => {\n        const newTotal = round1 + round2 + round3;\n        setTotal(newTotal)\n    }, [round1, round2, round3]);\n\n    const handlePlayerNameChange = (e) => {\n        setPlayerName(e.target.value);\n    }\n    const handleRoundChange = (roundNumber, e) => {\n        const newScore = parseInt(e.target.value);\n        switch(roundNumber) {\n            case 1:\n                setRound1Score(newScore);\n                break;\n            case 2:\n                setRound2Score(newScore);\n                break;\n            case 3:\n                setRound3Score(newScore);\n                break;\n            default:\n                break;\n        }\n    }\n\n\n    return (\n        <tr align=\"center\">\n            <td><input type=\"text\" value={playerName} onChange={handlePlayerNameChange}/></td>\n            <td>\n                <input type=\"number\" value={round1} onChange={(e) => handleRoundChange(1, e)} />\n            </td>\n            <td>\n                <input type=\"number\" value={round2} onChange={(e) => handleRoundChange(2, e)} />\n            </td>\n            <td>\n                <input type=\"number\" value={round3} onChange={(e) => handleRoundChange(3, e)} />\n            </td>\n            <td>{total}</td>\n            <td>\n                <button onClick={onRemove}>Remove</button>\n            </td>\n        </tr>\n    )\n}\n\nexport default ScoreRow;\n","import React, { useState } from 'react';\nimport ScoreRow from \"./ScoreRow\";\n\nexport const ScoreBoard = () => {\n    const [players, setPlayers] =useState( ['Player 1', 'Player 2'])\n    const [newPlayerName, setNewPlayerName] = useState('');\n\n    const handleAddPlayer = () => {\n        if (newPlayerName.trim() !== '') {\n            setPlayers([...players, newPlayerName]);\n            setNewPlayerName('');\n        }\n    }\n\n    const handleRemovePlayer = (index) => {\n        const playNameToRemove = players[index];\n        const shouldRemove = window.confirm(`Are you sure you want to remove ${playNameToRemove}?`);\n        if (!shouldRemove) return;\n        const updatedPlayers = [...players];\n        updatedPlayers.splice(index, 1);\n        setPlayers(updatedPlayers);\n    }\n    return (\n        <div>\n            <h3>Score Board</h3>\n            <table>\n                <thead>\n                <tr>\n                    <td>Name</td>\n                    <td>Round 1</td>\n                    <td>Round 2</td>\n                    <td>Round 3</td>\n                    <td>Score</td>\n                </tr>\n                </thead>\n                <tbody>\n                    {players.map((playerName, index) => (\n                        <ScoreRow\n                            key={index}\n                            basePlayers={playerName}\n                            onRemove={()=>handleRemovePlayer(index)}\n                        />\n                    ))}\n                    <tr>\n                        <td>\n                            <input\n                                type=\"text\"\n                                placeholder=\"New Player\"\n                                value={newPlayerName}\n                                onChange={(e) => setNewPlayerName(e.target.value)}\n                                />\n                        </td>\n                        <td colSpan=\"5\">\n                            <button onClick={handleAddPlayer}>Add Player</button>\n                        </td>\n                    </tr>\n                </tbody>\n\n            </table>\n        </div>\n    );\n}\n\nexport default ScoreBoard;\n","import React from 'react';\nimport ScoreBoard from \"./ScoreBoard\";\nexport const FiveCrowns = () => {\n    return (\n        <div>\n            <h1>Five Crowns</h1>\n            <ScoreBoard />\n        </div>\n    );\n}\n\nexport default FiveCrowns;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter as Router, Routes, Route, Link} from \"react-router-dom\";\n\nimport HomePage from './components/HomePage';\nimport NotFoundPage from './components/NotFoundPage';\nimport CowPage from './components/CowPage';\nimport FiveCrowns from './components/FiveCrowns/FiveCrowns';\nimport './index.css';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n    <Router>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/NotFoundPage\">Not Found</Link>\n            </li>\n            <li>\n                <Link to=\"/CowPage\">Cow Page</Link>\n            </li>\n            <li>\n                <Link to=\"/FiveCrowns\">Five Crowns</Link>\n            </li>\n          </ul>\n        </nav>\n        <Routes>\n            <Route path=\"/\" element={<HomePage/>} />\n            <Route path=\"/NotFoundPage\" element={<NotFoundPage/>} />\n            <Route path=\"/CowPage\" element={<CowPage/>} />\n            <Route path=\"/FiveCrowns\" element={<FiveCrowns/>} />\n        </Routes>\n    </Router>\n);\n\n"],"sourceRoot":""}